version: '3.3'


services:


  nginx:
    build:
      context: ./nginx
      args:
        - UID={{ if eq "linux" .Os }}${UID}{{ else }}1000{{ end }}
    container_name: {{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-nginx
    restart: unless-stopped
    labels:
      - traefik.backend={{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-nginx
      {{- range $env, $virtualhost := .Values.Kickoff.project.virtualhost }}
      {{- if eq  $env $.EnvFiles.Kickoff.ENV }}
      - traefik.frontend.rule=Host:{{ $virtualhost }},www.{{ $virtualhost }}
      {{- end }}
      {{- end }}
      - traefik.docker.network=kickoff_proxy
    networks:
      - proxy
      - backend
    volumes:
      - ../app:/var/www/html:ro
      - ./nginx/conf.d/php-fpm.conf:/etc/nginx/conf.d/php-fpm.conf:ro


  php-fpm:
    build: ./php-fpm
    container_name: {{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-php-fpm
    restart: unless-stopped
    entrypoint: /usr/local/bin/docker-entrypoint.sh
    networks:
      - backend
    environment:
      - UID={{ if eq "linux" .Os }}${UID}{{ else }}1000{{ end }}
    labels:
      - traefik.enable=false
    volumes:
      - ../app:/var/www/html:rw
      - ./php-fpm/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./php-fpm/php-fpm.d/security.conf:/usr/{{ .EnvFiles.Kickoff.ENV }}/etc/php-fpm.d/security.conf:ro
      - ./php-fpm/php-fpm.d/uploads.conf:/usr/{{ .EnvFiles.Kickoff.ENV }}/etc/php-fpm.d/uploads.conf:ro


  mysql:
    image: mysql:5.7
    container_name: {{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-mysql
    restart: unless-stopped
    networks:
      - backend
    {{- if eq "true" .EnvFiles.Kickoff.MYSQL_ENABLE_PORTS_MAPPING }}
    ports:
      - {{ .EnvFiles.Kickoff.MYSQL_HOST_PORT_TO_MAP }}:3306
    {{- end }}
    environment:
      - MYSQL_USER={{ .Values.Kickoff.mysql.user }}
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
    secrets:
      - mysql_password
      - mysql_root_password
    labels:
      - traefik.enable=false
    volumes:
      - ./mysql/volume:/var/lib/mysql:rw
      - ./mysql/conf.d/utf8mb4.cnf:/etc/mysql/conf.d/utf8mb4.cnf:ro
      - ./mysql/docker-entrypoint-initdb.d/databases.sql:/docker-entrypoint-initdb.d/databases.sql:ro

{{ if eq "local" .EnvFiles.Kickoff.ENV }}
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.7
    container_name: {{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-phpmyadmin
    restart: unless-stopped
    networks:
      - proxy
      - backend
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD={{ .EnvFiles.Kickoff.MYSQL_ROOT_PASSWORD }}
    labels:
      - traefik.backend={{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-phpmyadmin
      {{- range $env, $virtualhost := .Values.Kickoff.project.virtualhost }}
      {{- if eq  $env $.EnvFiles.Kickoff.ENV }}
      - traefik.frontend.rule=Host:phpadmin.{{ $virtualhost }}
      {{- end }}
      {{- end }}
      - traefik.docker.network=kickoff_proxy
    volumes:
      - ./phpmyadmin/volume:/sessions:rw
{{ end }}

  redis:
    image: redis:3.2-alpine
    container_name: {{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-redis
    restart: unless-stopped
    command: redis-server --requirepass {{ .EnvFiles.Kickoff.REDIS_PASSWORD }}
    networks:
      - backend
    labels:
      - traefik.enable=false
    volumes:
      - ./redis/volume:/data:rw


  rabbitmq:
    image: rabbitmq:3.6-management-alpine
    container_name: {{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-rabbitmq
    restart: unless-stopped
    hostname: rabbitmq
    networks:
      - proxy
      - backend
    environment:
      - RABBITMQ_DEFAULT_USER={{ .Values.Kickoff.rabbitmq.user }}
      - RABBITMQ_DEFAULT_PASS={{ .EnvFiles.Kickoff.RABBITMQ_PASSWORD }}
    labels:
      - traefik.backend={{ .EnvFiles.Kickoff.ENV }}-{{ .Values.Kickoff.project.name }}-rabbitmq
      {{- range $env, $virtualhost := .Values.Kickoff.project.virtualhost }}
      {{- if eq  $env $.EnvFiles.Kickoff.ENV }}
      - traefik.frontend.rule=Host:rabbitmq.{{ $virtualhost }}
      {{- end }}
      {{- end }}
      - traefik.port=15672
      - traefik.docker.network=kickoff_proxy
    volumes:
      - ./rabbitmq/volume:/var/lib/rabbitmq:rw


secrets:


  mysql_password:
    file: ./mysql/.secrets/mysql_password.txt


  mysql_root_password:
    file: ./mysql/.secrets/mysql_root_password.txt


networks:


  proxy:
    external:
      name: kickoff_proxy


  backend:
    external:
      name: {{ .EnvFiles.Kickoff.ENV }}{{ .Values.Kickoff.project.name }}_backend
